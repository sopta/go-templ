// Code generated by ent, DO NOT EDIT.

package movie

import (
	"go_templ/ent/predicate"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Movie {
	return predicate.Movie(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Movie {
	return predicate.Movie(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Movie {
	return predicate.Movie(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Movie {
	return predicate.Movie(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Movie {
	return predicate.Movie(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Movie {
	return predicate.Movie(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Movie {
	return predicate.Movie(sql.FieldLTE(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldTitle, v))
}

// Director applies equality check predicate on the "director" field. It's identical to DirectorEQ.
func Director(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldDirector, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Movie {
	return predicate.Movie(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Movie {
	return predicate.Movie(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Movie {
	return predicate.Movie(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Movie {
	return predicate.Movie(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Movie {
	return predicate.Movie(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Movie {
	return predicate.Movie(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Movie {
	return predicate.Movie(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Movie {
	return predicate.Movie(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Movie {
	return predicate.Movie(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Movie {
	return predicate.Movie(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Movie {
	return predicate.Movie(sql.FieldContainsFold(FieldTitle, v))
}

// DirectorEQ applies the EQ predicate on the "director" field.
func DirectorEQ(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEQ(FieldDirector, v))
}

// DirectorNEQ applies the NEQ predicate on the "director" field.
func DirectorNEQ(v string) predicate.Movie {
	return predicate.Movie(sql.FieldNEQ(FieldDirector, v))
}

// DirectorIn applies the In predicate on the "director" field.
func DirectorIn(vs ...string) predicate.Movie {
	return predicate.Movie(sql.FieldIn(FieldDirector, vs...))
}

// DirectorNotIn applies the NotIn predicate on the "director" field.
func DirectorNotIn(vs ...string) predicate.Movie {
	return predicate.Movie(sql.FieldNotIn(FieldDirector, vs...))
}

// DirectorGT applies the GT predicate on the "director" field.
func DirectorGT(v string) predicate.Movie {
	return predicate.Movie(sql.FieldGT(FieldDirector, v))
}

// DirectorGTE applies the GTE predicate on the "director" field.
func DirectorGTE(v string) predicate.Movie {
	return predicate.Movie(sql.FieldGTE(FieldDirector, v))
}

// DirectorLT applies the LT predicate on the "director" field.
func DirectorLT(v string) predicate.Movie {
	return predicate.Movie(sql.FieldLT(FieldDirector, v))
}

// DirectorLTE applies the LTE predicate on the "director" field.
func DirectorLTE(v string) predicate.Movie {
	return predicate.Movie(sql.FieldLTE(FieldDirector, v))
}

// DirectorContains applies the Contains predicate on the "director" field.
func DirectorContains(v string) predicate.Movie {
	return predicate.Movie(sql.FieldContains(FieldDirector, v))
}

// DirectorHasPrefix applies the HasPrefix predicate on the "director" field.
func DirectorHasPrefix(v string) predicate.Movie {
	return predicate.Movie(sql.FieldHasPrefix(FieldDirector, v))
}

// DirectorHasSuffix applies the HasSuffix predicate on the "director" field.
func DirectorHasSuffix(v string) predicate.Movie {
	return predicate.Movie(sql.FieldHasSuffix(FieldDirector, v))
}

// DirectorEqualFold applies the EqualFold predicate on the "director" field.
func DirectorEqualFold(v string) predicate.Movie {
	return predicate.Movie(sql.FieldEqualFold(FieldDirector, v))
}

// DirectorContainsFold applies the ContainsFold predicate on the "director" field.
func DirectorContainsFold(v string) predicate.Movie {
	return predicate.Movie(sql.FieldContainsFold(FieldDirector, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Movie) predicate.Movie {
	return predicate.Movie(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Movie) predicate.Movie {
	return predicate.Movie(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Movie) predicate.Movie {
	return predicate.Movie(sql.NotPredicates(p))
}
